[{"/Users/ianpage/Documents/react-app/src/index.js":"1","/Users/ianpage/Documents/react-app/src/reportWebVitals.js":"2","/Users/ianpage/Documents/react-app/src/App.js":"3","/Users/ianpage/Documents/react-app/src/components/forecast.js":"4","/Users/ianpage/Documents/react-app/src/components/surf-forecast.js":"5","/Users/ianpage/Documents/react-app/src/components/home.js":"6","/Users/ianpage/Documents/react-app/src/components/login.js":"7"},{"size":500,"mtime":1611117145794,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1611117145796,"results":"10","hashOfConfig":"9"},{"size":665,"mtime":1612373599789,"results":"11","hashOfConfig":"9"},{"size":1008,"mtime":1612290136934,"results":"12","hashOfConfig":"9"},{"size":3662,"mtime":1612306566889,"results":"13","hashOfConfig":"9"},{"size":1591,"mtime":1612290974405,"results":"14","hashOfConfig":"9"},{"size":2778,"mtime":1612373681188,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1l1czeh",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/ianpage/Documents/react-app/src/index.js",[],["34","35"],"/Users/ianpage/Documents/react-app/src/reportWebVitals.js",[],"/Users/ianpage/Documents/react-app/src/App.js",["36"],"import logo from './logo.svg';\nimport './App.css';\n\nimport React, {Component} from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport Home from './components/home';\nimport SurfForecast from './components/surf-forecast';\nimport Login from './components/login';\n\nclass App extends Component {\n  render () {\n\n    return (\n      <BrowserRouter>\n        <div>\n          <Switch>\n            <Route path=\"/\" component={Home} exact />\n            <Route path=\"/surf\" component={SurfForecast} />\n            <Route path=\"/login\" component={Login} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","/Users/ianpage/Documents/react-app/src/components/forecast.js",["37"],"import React from 'react'\nvar moment = require('moment');\n\nconst Forecast = ({ forecast }) => {\n    \n    if (!forecast || !forecast[0].weather) {\n        return <span>Loading...</span>;\n      }\n    \n    return (\n    <div>\n        <center><h1>Weather</h1></center>\n        {forecast.map((w) => (\n            \n            <div key={w.dt} class=\"card\">\n                <div class=\"card-body\">\n                    <h6 class=\"card-subtitle mb-2 text-muted\">{ moment(new Date(w.dt * 1000)).format('ddd, MMM D') }</h6>\n                    <h5 class=\"card-title\">{w.weather[0].main} <img src={\"http://openweathermap.org/img/wn/\" + w.weather[0].icon + \"@2x.png\"}></img></h5>\n                    <h6 class=\"card-subtitle mb-2 text-muted\">{w.weather[0].description}</h6>\n                    <p class=\"card-text\">\n                        max: {w.temp.max} C <br/>\n                        min: {w.temp.min} C</p>\n                </div>\n            </div>\n        \n        ))}\n    </div>\n    )\n};\n\nexport default Forecast;","/Users/ianpage/Documents/react-app/src/components/surf-forecast.js",["38","39","40"],"import React, {Component} from 'react'\nvar moment = require('moment');\n\nclass SurfForecast extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            surf_forecast: [],\n            wind_forecast: [],\n            tides_forecast: [],\n            spotId: ''\n        }\n    }\n\n    maxPeriod(swells) {\n        \n        // trimming empty records\n        for(var i = 0; i < swells.length; i++){\n            if(swells[i].height == 0) {\n                swells.splice(i, 1);\n            }\n        }\n\n        // retreiving main swell\n        var maxi = -1;\n        var maxheight = -1;\n        for(var i = 0; i < swells.length; i++){\n            if(swells[i].height > maxheight) {\n                maxi = i;\n                maxheight = swells[i].height;\n            }\n        }\n\n        return swells[maxi].period\n    }\n\n    // adds windscore to surf forecast for full score\n    addWindScore() {\n\n        for(var i = 0; i < this.state.wind_forecast.data.wind.length; i++) {\n            this.state.surf_forecast.data.wave[i].surf.optimalScore += this.state.wind_forecast.data.wind[i].optimalScore;\n        }\n    }\n\n    render () {\n\n        if (!this.state.surf_forecast || !this.state.surf_forecast.data\n            || !this.state.surf_forecast.data.wave || !this.state.wind_forecast\n            || !this.state.wind_forecast.data || !this.state.wind_forecast.data.wind) {\n            return <span>Loading...</span>;\n        \n        } else {\n            this.addWindScore()\n            return (\n                <div>\n                    <center><div>Surf Forcast</div></center>\n                    {this.state.surf_forecast.data.wave.map((f) => (\n                        <div key={f.timestamp} class=\"card\">\n                            <div class=\"card-body\">\n                                <h6 class=\"card-subtitle mb-2 text-muted\">{ moment(new Date(f.timestamp * 1000)).format('ddd, MMM D') }</h6>\n                                <h5 class=\"card-title\">{f.surf.min}-{f.surf.max}m @ {this.maxPeriod(f.swells)}s</h5>\n                                <h6 class=\"card-subtitle mb-2 text-muted\">{f.surf.optimalScore}*</h6>\n                                {/* <p class=\"card-text\">\n                                    max: {w.temp.max} C <br/>\n                                    min: {w.temp.min} C</p> */}\n                            </div>\n                        </div>\n                    ))}\n                </div>\n            );\n        }\n    }\n\n    componentDidMount() {\n        // lawrencetown forecast\n        fetch('https://services.surfline.com/kbyg/spots/forecasts/wave?spotId=58bdfa7882d034001252e3d8&intervalHours=24')\n        .then(res => res.json())\n        .then((surf_data) => {\n\n            this.setState({ surf_forecast: surf_data })\n            console.log(surf_data)\n        })\n        .catch(console.log)\n\n        // wind query\n        fetch('https://services.surfline.com/kbyg/spots/forecasts/wind?spotId=58bdfa7882d034001252e3d8&intervalHours=24')\n        .then(res => res.json())\n        .then((data) => {\n            this.setState({ wind_forecast: data })\n            console.log(data)\n        })\n        .catch(console.log)\n\n        // tides query\n        fetch('https://services.surfline.com/kbyg/spots/forecasts/tides?spotId=58bdfa7882d034001252e3d8&intervalHours=24')\n        .then(res => res.json())\n        .then((data) => {\n            this.setState({ tides_forecast: data })\n            console.log(data)\n        })\n        .catch(console.log)\n\n        fetch(\"http://localhost:3001/testAPI\")\n        .then(res => res.text())\n        .then(res => console.log(\"TEST\",res));\n    } \n};\n\nexport default SurfForecast;","/Users/ianpage/Documents/react-app/src/components/home.js",[],"/Users/ianpage/Documents/react-app/src/components/login.js",["41","42","43"],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":1,"column":8,"nodeType":"50","messageId":"51","endLine":1,"endColumn":12},{"ruleId":"52","severity":1,"message":"53","line":18,"column":64,"nodeType":"54","endLine":18,"endColumn":143},{"ruleId":"55","severity":1,"message":"56","line":20,"column":33,"nodeType":"57","messageId":"58","endLine":20,"endColumn":35},{"ruleId":"59","severity":1,"message":"60","line":28,"column":17,"nodeType":"50","messageId":"61","endLine":28,"endColumn":18},{"ruleId":"62","severity":1,"message":"63","line":42,"column":13,"nodeType":"64","endLine":42,"endColumn":55},{"ruleId":"48","severity":1,"message":"65","line":3,"column":8,"nodeType":"50","messageId":"51","endLine":3,"endColumn":11},{"ruleId":"55","severity":1,"message":"56","line":16,"column":30,"nodeType":"57","messageId":"58","endLine":16,"endColumn":32},{"ruleId":"55","severity":1,"message":"56","line":18,"column":37,"nodeType":"57","messageId":"58","endLine":18,"endColumn":39},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-redeclare","'i' is already defined.","redeclared","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'App' is defined but never used.","no-global-assign","no-unsafe-negation"]