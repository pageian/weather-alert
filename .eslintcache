[{"/Users/ianpage/Documents/react-app/src/index.js":"1","/Users/ianpage/Documents/react-app/src/reportWebVitals.js":"2","/Users/ianpage/Documents/react-app/src/App.js":"3","/Users/ianpage/Documents/react-app/src/components/forecast.js":"4","/Users/ianpage/Documents/react-app/src/components/surf-forecast.js":"5","/Users/ianpage/Documents/react-app/src/components/home.js":"6","/Users/ianpage/Documents/react-app/src/components/signup.js":"7","/Users/ianpage/Documents/react-app/src/components/login.js":"8"},{"size":593,"mtime":1612388756981,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1611117145796,"results":"11","hashOfConfig":"10"},{"size":760,"mtime":1612388756976,"results":"12","hashOfConfig":"10"},{"size":2554,"mtime":1612391247359,"results":"13","hashOfConfig":"10"},{"size":3677,"mtime":1612446064186,"results":"14","hashOfConfig":"10"},{"size":2122,"mtime":1612391966719,"results":"15","hashOfConfig":"10"},{"size":4571,"mtime":1612388756978,"results":"16","hashOfConfig":"10"},{"size":3455,"mtime":1612388756977,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1l1czeh",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"20"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"20"},"/Users/ianpage/Documents/react-app/src/index.js",[],["40","41"],"/Users/ianpage/Documents/react-app/src/reportWebVitals.js",[],"/Users/ianpage/Documents/react-app/src/App.js",["42","43"],"import logo from './logo.svg';\nimport './App.css';\n\nimport React, {Component} from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport Home from './components/home';\nimport SurfForecast from './components/surf-forecast';\n\nclass App extends Component {\n  render () {\n\n    return (\n      <BrowserRouter>\n        <div>\n          <Switch>\n            <Route path=\"/\" component={Home} exact />\n            <Route path=\"/surf\" component={SurfForecast} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","/Users/ianpage/Documents/react-app/src/components/forecast.js",["44"],"import React, {Component} from 'react'\nvar moment = require('moment');\n\nclass Forecast extends Component {\n    \n    constructor() {\n        super();\n        this.state = {\n            forecast: []\n        }\n    }\n\n    render () {\n        if (!this.state.forecast.current || !this.state.forecast.daily || !this.state.forecast.daily[0].weather) { return <span>Loading...</span>; }\n        else {\n            return (\n                <div>\n                    <div class=\"card\">\n                        <div class=\"card-body\">\n                            <h5 class=\"card-title\">{this.state.forecast.timezone}</h5>\n                            <h6 class=\"card-subtitle mb-2 text-muted\">{this.state.forecast.current.weather[0].main}</h6>\n                            <p class=\"card-text\">\n                            temp: {this.state.forecast.current.temp} C <br/>\n                            feels like: {this.state.forecast.current.feels_like} C\n                            </p>\n                        </div>\n                    </div>\n                    <center><h1>Weather</h1></center>\n                    {this.state.forecast.daily.map((w) => (\n                        \n                        <div key={w.dt} class=\"card\">\n                            <div class=\"card-body\">\n                                <h6 class=\"card-subtitle mb-2 text-muted\">{ moment(new Date(w.dt * 1000)).format('ddd, MMM D') }</h6>\n                                <h5 class=\"card-title\">{w.weather[0].main} <img src={\"http://openweathermap.org/img/wn/\" + w.weather[0].icon + \"@2x.png\"}></img></h5>\n                                <h6 class=\"card-subtitle mb-2 text-muted\">{w.weather[0].description}</h6>\n                                <p class=\"card-text\">\n                                    max: {w.temp.max} C <br/>\n                                    min: {w.temp.min} C</p>\n                            </div>\n                        </div>\n                    \n                    ))}\n                </div>\n            )\n        }   \n    }\n    \n    componentDidMount() {\n        // fetch('http://api.openweathermap.org/data/2.5/weather?q=Halifax&appid=a28eff83ec6108abef556025bece0213')\n        fetch('http://api.openweathermap.org/data/2.5/onecall?lat=44.648618&lon=-63.5859487&exclude=minutely,hourly&units=metric&appid=a28eff83ec6108abef556025bece0213')\n        .then(res => res.json())\n        .then((data) => {\n            this.setState({ forecast: data })\n            console.log(data)\n    \n        }).catch(console.log)     \n    } \n};\n\nexport default Forecast;","/Users/ianpage/Documents/react-app/src/components/surf-forecast.js",["45","46","47"],"/Users/ianpage/Documents/react-app/src/components/home.js",["48","49"],"import React, {Component} from 'react'\nimport { Redirect } from 'react-router-dom';\nimport Cookies from 'universal-cookie';\nimport Nav from 'react-bootstrap/Nav'\n\nimport Forecast from './forecast';\nimport SurfForecast from './surf-forecast';\n\nclass Home extends Component {\n    \n    constructor() {\n        super();\n        this.state = {\n            weather: [],\n            active_page: \"\"\n        }\n    }\n\n    logout() {\n        console.log(\"TEST\")\n        const cookies = new Cookies();\n        cookies.set('uid', \"\");\n        this.forceUpdate()\n    }\n\n    render_active_page () {\n        switch(this.state.active_page) {\n            case '': return <Forecast />    // defines default page\n            case 'forecast': return <Forecast />\n            case 'surf-forecast': return <SurfForecast />\n        }\n    }\n\n    render () {\n        // redirecting to login if no active user\n        const cookies = new Cookies();\n        if(cookies.get('uid') == \"\" || !cookies.get('uid')){ return <Redirect to=\"/login\" />; }\n        else {\n            return (\n                <div>\n                    <Nav\n                        activeKey=\"/\">\n                        <Nav.Item>\n                            <Nav.Link href=\"/\">Surf Alert</Nav.Link>\n                        </Nav.Item>\n                        <Nav.Item>\n                            <Nav.Link onClick={() => this.setState({active_page:'forecast'}) }>Weather Forecast</Nav.Link>\n                        </Nav.Item>\n                        <Nav.Item>\n                            <Nav.Link onClick={() => this.setState({active_page:'surf-forecast'}) }>Surf Forecast</Nav.Link>\n                        </Nav.Item>\n                        <Nav.Item>\n                            <Nav.Link href=\"/surf\">Settings</Nav.Link>\n                        </Nav.Item>\n                        <Nav.Item>\n                            <Nav.Link onClick={() => this.logout()}>Logout</Nav.Link>\n                        </Nav.Item>\n                    </Nav>\n                    {this.render_active_page()}\n                </div>\n            );\n        }\n    }\n}\n\nexport default Home;","/Users/ianpage/Documents/react-app/src/components/signup.js",["50","51","52","53","54","55","56"],"import React, {Component} from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport Cookies from 'universal-cookie';\n\nclass Signup extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            name: \"\",\n            email: \"\",\n            conf_email: \"\",\n            password: \"\",\n            conf_password: \"\"\n        }\n    }\n\n    updateField(event) {\n        if(event.target.name == 'name') this.setState({name: event.target.value});\n        else if(event.target.name == 'email') this.setState({email: event.target.value});\n        else if(event.target.name == 'conf_email') this.setState({conf_email: event.target.value});\n        else if(event.target.name == 'password') this.setState({password: event.target.value});\n        else if(event.target.name == 'conf_password') this.setState({conf_password: event.target.value});\n    }\n\n    signup() {\n        const cookies = new Cookies();\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                name: this.state.name,\n                email: this.state.email,\n                conf_email: this.state.conf_email,\n                password: this.state.password,\n                conf_password: this.state.conf_password\n            })\n        };\n        fetch(\"http://localhost:3001/testAPI/signup\", requestOptions)\n            .then(res => res.json())\n            .then(res => {\n                console.log(res);\n\n                if(res.uid && res.uid != \"\") {\n                    console.log(\"LOGGING IN\")\n                    cookies.set('uid', res.uid);\n                    this.forceUpdate()\n                } else {\n                    //TODO: alert msg\n                    console.log(\"ERROR\");\n                }\n            });\n    }\n\n    render () {\n\n        // redirecting to login if active user\n        const cookies = new Cookies();\n        if(cookies.get('uid') && cookies.get('uid') != \"\"){ return <Redirect to=\"/\" />; }\n        else {\n            return (  \n                <div class=\"container-fluid\">\n                    <div class=\"row\">\n                        <div class=\"col-sm-2\"></div>\n                        <div class=\"col-lg-7 col-md-8 col-sm-6\">\n                            <h3 class=\"form-header\">Please Sign Up with us</h3>\n                            <hr></hr>\n                        </div>\n                    </div>\n                    <div id=\"form-pad\">\n                        <div id=\"form-content\">\n                            <form>\n                                <div class=\"form-group\">\n                                    <input type=\"username\" name=\"name\" value={this.state.name} onChange={this.updateField.bind(this)} class=\"form-control\" placeholder=\"Name\" />\n                                </div>\n                                <div class=\"form-group\">\n                                    <input type=\"email\" name=\"email\" value={this.state.email} onChange={this.updateField.bind(this)} class=\"form-control\" placeholder=\"Email address\" />\n                                </div>\n                                <div class=\"form-group\">\n                                    <input type=\"email\" name=\"conf_email\" value={this.state.conf_email} onChange={this.updateField.bind(this)} class=\"form-control\" placeholder=\"Confirm Email address\" />\n                                </div>\n                                <div class=\"form-group\">\n                                    <input type=\"password\" name=\"password\" value={this.state.password} onChange={this.updateField.bind(this)} class=\"form-control\" placeholder=\"Password\" />\n                                </div>\n                                <div class=\"form-group\">\n                                    <input type=\"password\" name=\"conf_password\" value={this.state.conf_password} onChange={this.updateField.bind(this)} class=\"form-control\" placeholder=\"Confirm Password\" />\n                                </div>\n                                <button type=\"button\" \n                                        class=\"btn btn-primary\"\n                                        onClick={() => this.signup()}\n                                        >Sign Up</button>\n                            </form>\n                            <hr class=\"separator\"></hr>\n                            <Link to=\"login\">Already a user? Sign In</Link>\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n    }\n}\n\nexport default Signup;","/Users/ianpage/Documents/react-app/src/components/login.js",["57","58","59","60"],"import React, {Component} from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport Cookies from 'universal-cookie';\n\nclass Login extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            email: \"\",\n            password: \"\"\n        }\n    }\n\n    updateField(event) {\n        if(event.target.name == 'email') this.setState({email: event.target.value});\n        else if(event.target.name == 'password') this.setState({password: event.target.value});\n    }\n\n    login() {\n        const cookies = new Cookies();\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ email: this.state.email, password: this.state.password })\n        };\n        fetch(\"http://localhost:3001/testAPI/login\", requestOptions)\n            .then(res => res.json())\n            .then(res => {\n                console.log(res);\n\n                if(res.uid && res.uid != \"\") {\n                    console.log(\"LOGGING IN\")\n                    cookies.set('uid', res.uid);\n                    this.forceUpdate()\n                } else {\n                    //TODO: alert msg\n                    console.log(\"ERROR\");\n                }\n            });\n    }\n\n    render () {\n\n        // redirecting to login if active user\n        const cookies = new Cookies();\n        if(cookies.get('uid') && cookies.get('uid') != \"\"){ return <Redirect to=\"/\" />; }\n        else {\n            return (\n                <div class=\"container-fluid\">\n                    <div class=\"row\">\n                        <div class=\"col-sm-2\"></div>\n                        <div class=\"col-lg-7 col-md-8 col-sm-6\">\n                            <h2>Welcome!!!</h2>\n                            <br></br>\n                            <h3 class=\"form-header\">Please login to continue</h3>\n                            <hr></hr>\n                        </div>\n\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-sm-2\"></div>\n                        <div class=\"col-lg-7 col-md-8 col-sm-6\" id=\"form-pad\">\n                            <div id=\"form-content\">\n                                <form>\n                                    <div class=\"form-group\">\n                                        <input type=\"email\" name=\"email\" value={this.state.email} onChange={this.updateField.bind(this)} class=\"form-control\" placeholder=\"Email address\"/>\n                                    </div>\n                                    <div class=\"form-group\">\n                                        <input type=\"password\" name=\"password\" value={this.state.password} onChange={this.updateField.bind(this)} class=\"form-control\" placeholder=\"Password\"/>\n                                    </div>\n                                    <button\n                                        type=\"button\"\n                                        class=\"btn btn-primary\"\n                                        onClick={() => this.login()}\n                                        >Log In</button>\n                                </form>\n                                <hr class=\"separator\"/>\n                                <Link to=\"/signup\">Create New Account</Link>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n    }\n};\n\nexport default Login;",{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":1,"column":8,"nodeType":"67","messageId":"68","endLine":1,"endColumn":12},{"ruleId":"65","severity":1,"message":"69","line":5,"column":25,"nodeType":"67","messageId":"68","endLine":5,"endColumn":33},{"ruleId":"70","severity":1,"message":"71","line":34,"column":76,"nodeType":"72","endLine":34,"endColumn":155},{"ruleId":"73","severity":1,"message":"74","line":21,"column":33,"nodeType":"75","messageId":"76","endLine":21,"endColumn":35},{"ruleId":"77","severity":1,"message":"78","line":29,"column":17,"nodeType":"67","messageId":"79","endLine":29,"endColumn":18},{"ruleId":"80","severity":1,"message":"81","line":43,"column":13,"nodeType":"82","endLine":43,"endColumn":55},{"ruleId":"83","severity":1,"message":"84","line":27,"column":9,"nodeType":"85","messageId":"86","endLine":31,"endColumn":10},{"ruleId":"73","severity":1,"message":"74","line":37,"column":31,"nodeType":"75","messageId":"76","endLine":37,"endColumn":33},{"ruleId":"73","severity":1,"message":"74","line":19,"column":30,"nodeType":"75","messageId":"76","endLine":19,"endColumn":32},{"ruleId":"73","severity":1,"message":"74","line":20,"column":35,"nodeType":"75","messageId":"76","endLine":20,"endColumn":37},{"ruleId":"73","severity":1,"message":"74","line":21,"column":35,"nodeType":"75","messageId":"76","endLine":21,"endColumn":37},{"ruleId":"73","severity":1,"message":"74","line":22,"column":35,"nodeType":"75","messageId":"76","endLine":22,"endColumn":37},{"ruleId":"73","severity":1,"message":"74","line":23,"column":35,"nodeType":"75","messageId":"76","endLine":23,"endColumn":37},{"ruleId":"73","severity":1,"message":"87","line":44,"column":39,"nodeType":"75","messageId":"76","endLine":44,"endColumn":41},{"ruleId":"73","severity":1,"message":"87","line":59,"column":53,"nodeType":"75","messageId":"76","endLine":59,"endColumn":55},{"ruleId":"73","severity":1,"message":"74","line":16,"column":30,"nodeType":"75","messageId":"76","endLine":16,"endColumn":32},{"ruleId":"73","severity":1,"message":"74","line":17,"column":35,"nodeType":"75","messageId":"76","endLine":17,"endColumn":37},{"ruleId":"73","severity":1,"message":"87","line":32,"column":39,"nodeType":"75","messageId":"76","endLine":32,"endColumn":41},{"ruleId":"73","severity":1,"message":"87","line":47,"column":53,"nodeType":"75","messageId":"76","endLine":47,"endColumn":55},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-redeclare","'i' is already defined.","redeclared","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation"]